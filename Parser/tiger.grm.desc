62 shift/reduce conflicts

error:  state 20: shift/reduce conflict (shift LBRACK, reduce by rule 66)
error:  state 89: shift/reduce conflict (shift OR, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift GE, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 16)
error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 15)
error:  state 120: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift PLUS, reduce by rule 14)
error:  state 121: shift/reduce conflict (shift OR, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 45)
error:  state 136: shift/reduce conflict (shift OR, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift AND, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift GE, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift GT, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift LE, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift LT, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift NEQ, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift EQ, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift DIVIDE, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift TIMES, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift MINUS, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift PLUS, reduce by rule 17)

state 0:

	program : . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 9
	program	goto 141
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 1:

	exp : array_create .  (reduce by rule 12)



	.	reduce by rule 12


state 2:

	exp : record_create .  (reduce by rule 11)



	.	reduce by rule 11


state 3:

	exp : bool_exp .  (reduce by rule 10)



	.	reduce by rule 10


state 4:

	exp : comp_exp .  (reduce by rule 9)



	.	reduce by rule 9


state 5:

	exp : funcall .  (reduce by rule 7)



	.	reduce by rule 7


state 6:

	exp : arith_exp .  (reduce by rule 8)



	.	reduce by rule 8


state 7:

	exp : unit_exp .  (reduce by rule 3)



	.	reduce by rule 3


state 8:

	exp : lvalue .  (reduce by rule 1)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 

	LBRACK	shift 23
	DOT	shift 22
	ASSIGN	shift 21


	.	reduce by rule 1


state 9:

	program : exp .  (reduce by rule 0)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 0


state 10:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 11:

	exp : BREAK .  (reduce by rule 18)



	.	reduce by rule 18


state 12:

	exp : LET . decs IN expseq END 


	decs	goto 36

	.	reduce by rule 21


state 13:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 37


	.	error


state 14:

	exp : WHILE . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 38
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 15:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 39
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 16:

	exp : MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 40
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 17:

	exp : LPAREN . expseq RPAREN 
	unit_exp : LPAREN . RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	RPAREN	shift 43
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 42
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1
	expseq	goto 41

	.	error


state 18:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 19:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4

error:  state 20: shift/reduce conflict (shift LBRACK, reduce by rule 66)

state 20:

	lvalue : ID .  (reduce by rule 66)
	lvalue : ID . LBRACK exp RBRACK 
	funcall : ID . LPAREN explist RPAREN 
	record_create : ID . LBRACE record_create_list RBRACE 
	array_create : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 46
	LBRACK	shift 45
	LBRACE	shift 44


	.	reduce by rule 66


state 21:

	exp : lvalue ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 47
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 22:

	lvalue : lvalue DOT . ID 

	ID	shift 48


	.	error


state 23:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 49
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 24:

	bool_exp : exp OR . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 50
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 25:

	bool_exp : exp AND . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 51
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 26:

	comp_exp : exp GE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 52
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 27:

	comp_exp : exp GT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 53
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 28:

	comp_exp : exp LE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 54
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 29:

	comp_exp : exp LT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 55
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 30:

	comp_exp : exp NEQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 56
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 31:

	comp_exp : exp EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 57
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 32:

	arith_exp : exp DIVIDE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 58
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 33:

	arith_exp : exp TIMES . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 59
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 34:

	arith_exp : exp MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 60
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 35:

	arith_exp : exp PLUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 61
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 36:

	exp : LET decs . IN expseq END 
	decs : decs . dec 

	IN	shift 69
	FUNCTION	shift 68
	VAR	shift 67
	TYPE	shift 66

	dec	goto 65
	tydec	goto 64
	vardec	goto 63
	fundec	goto 62

	.	error


state 37:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 70


	.	error


state 38:

	exp : WHILE exp . DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 71


	.	error


state 39:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	THEN	shift 72


	.	error


state 40:

	exp : MINUS exp .  (reduce by rule 6)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 6


state 41:

	exp : LPAREN expseq . RPAREN 
	expseq : expseq . SEMICOLON exp 

	SEMICOLON	shift 74
	RPAREN	shift 73


	.	error


state 42:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	expseq : exp .  (reduce by rule 46)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 46


state 43:

	unit_exp : LPAREN RPAREN .  (reduce by rule 48)



	.	reduce by rule 48


state 44:

	record_create : ID LBRACE . record_create_list RBRACE 

	ID	shift 78

	record_create_list	goto 77
	record_create_list_nonempty	goto 76
	record_create_field	goto 75

	.	reduce by rule 40


state 45:

	lvalue : ID LBRACK . exp RBRACK 
	array_create : ID LBRACK . exp RBRACK OF exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 79
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 46:

	funcall : ID LPAREN . explist RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 82
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1
	explist	goto 81
	explist_nonempty	goto 80

	.	reduce by rule 50


state 47:

	exp : lvalue ASSIGN exp .  (reduce by rule 13)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 13


state 48:

	lvalue : lvalue DOT ID .  (reduce by rule 69)



	.	reduce by rule 69


state 49:

	lvalue : lvalue LBRACK exp . RBRACK 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	RBRACK	shift 83
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 50:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	bool_exp : exp OR exp .  (reduce by rule 65)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26


	.	reduce by rule 65


state 51:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp AND exp .  (reduce by rule 64)
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26


	.	reduce by rule 64


state 52:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	comp_exp : exp GE exp .  (reduce by rule 63)
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 63
	OR	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 53:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp GT exp .  (reduce by rule 62)
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 62
	COMMA	reduce by rule 62
	SEMICOLON	reduce by rule 62
	RPAREN	reduce by rule 62
	RBRACK	reduce by rule 62
	RBRACE	reduce by rule 62
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 62
	OR	reduce by rule 62
	THEN	reduce by rule 62
	ELSE	reduce by rule 62
	TO	reduce by rule 62
	DO	reduce by rule 62
	IN	reduce by rule 62
	END	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62


	.	error


state 54:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp LE exp .  (reduce by rule 61)
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	reduce by rule 61
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 61
	OR	reduce by rule 61
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	TYPE	reduce by rule 61


	.	error


state 55:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp LT exp .  (reduce by rule 60)
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60


	.	error


state 56:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp NEQ exp .  (reduce by rule 59)
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59


	.	error


state 57:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp EQ exp .  (reduce by rule 58)
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	TYPE	reduce by rule 58


	.	error


state 58:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	arith_exp : exp DIVIDE exp .  (reduce by rule 57)
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 57


state 59:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp TIMES exp .  (reduce by rule 56)
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 



	.	reduce by rule 56


state 60:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp MINUS exp .  (reduce by rule 55)
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 55


state 61:

	arith_exp : exp . PLUS exp 
	arith_exp : exp PLUS exp .  (reduce by rule 54)
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 54


state 62:

	dec : fundec .  (reduce by rule 25)



	.	reduce by rule 25


state 63:

	dec : vardec .  (reduce by rule 24)



	.	reduce by rule 24


state 64:

	dec : tydec .  (reduce by rule 23)



	.	reduce by rule 23


state 65:

	decs : decs dec .  (reduce by rule 22)



	.	reduce by rule 22


state 66:

	tydec : TYPE . ID EQ ty 

	ID	shift 84


	.	error


state 67:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 85


	.	error


state 68:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 86


	.	error


state 69:

	exp : LET decs IN . expseq END 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 42
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1
	expseq	goto 87

	.	error


state 70:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 88
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 71:

	exp : WHILE exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 89
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 72:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 90
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 73:

	exp : LPAREN expseq RPAREN .  (reduce by rule 20)



	.	reduce by rule 20


state 74:

	expseq : expseq SEMICOLON . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 91
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 75:

	record_create_list_nonempty : record_create_field .  (reduce by rule 42)



	.	reduce by rule 42


state 76:

	record_create_list : record_create_list_nonempty .  (reduce by rule 41)
	record_create_list_nonempty : record_create_list_nonempty . COMMA record_create_field 

	COMMA	shift 92


	.	reduce by rule 41


state 77:

	record_create : ID LBRACE record_create_list . RBRACE 

	RBRACE	shift 93


	.	error


state 78:

	record_create_field : ID . EQ exp 

	EQ	shift 94


	.	error


state 79:

	lvalue : ID LBRACK exp . RBRACK 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	array_create : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 95
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 80:

	explist : explist_nonempty .  (reduce by rule 51)



	.	reduce by rule 51


state 81:

	funcall : ID LPAREN explist . RPAREN 
	explist_nonempty : explist . COMMA exp 

	COMMA	shift 97
	RPAREN	shift 96


	.	error


state 82:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	explist_nonempty : exp .  (reduce by rule 52)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 52


state 83:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 68)



	.	reduce by rule 68


state 84:

	tydec : TYPE ID . EQ ty 

	EQ	shift 98


	.	error


state 85:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 100
	ASSIGN	shift 99


	.	error


state 86:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 101


	.	error


state 87:

	exp : LET decs IN expseq . END 
	expseq : expseq . SEMICOLON exp 

	SEMICOLON	shift 74
	END	shift 102


	.	error


state 88:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	TO	shift 103


	.	error

error:  state 89: shift/reduce conflict (shift OR, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift GE, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 16)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 16)

state 89:

	exp : WHILE exp DO exp .  (reduce by rule 16)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 16

error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift OR, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift AND, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift GE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift GT, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift LE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift LT, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift NEQ, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift EQ, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 15)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 15)

state 90:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 15)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	ELSE	shift 104


	.	reduce by rule 15


state 91:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	expseq : expseq SEMICOLON exp .  (reduce by rule 47)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 47


state 92:

	record_create_list_nonempty : record_create_list_nonempty COMMA . record_create_field 

	ID	shift 78

	record_create_field	goto 105

	.	error


state 93:

	record_create : ID LBRACE record_create_list RBRACE .  (reduce by rule 39)



	.	reduce by rule 39


state 94:

	record_create_field : ID EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 106
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 95:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 67)
	array_create : ID LBRACK exp RBRACK . OF exp 

	OF	shift 107


	.	reduce by rule 67


state 96:

	funcall : ID LPAREN explist RPAREN .  (reduce by rule 49)



	.	reduce by rule 49


state 97:

	explist_nonempty : explist COMMA . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 108
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 98:

	tydec : TYPE ID EQ . ty 

	ID	shift 112
	LBRACE	shift 111
	ARRAY	shift 110

	ty	goto 109

	.	error


state 99:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 113
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 100:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 114


	.	error


state 101:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 118

	tyfields	goto 117
	tyfields_nonempty	goto 116
	tyfield	goto 115

	.	reduce by rule 31


state 102:

	exp : LET decs IN expseq END .  (reduce by rule 19)



	.	reduce by rule 19


state 103:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 119
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 104:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 120
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 105:

	record_create_list_nonempty : record_create_list_nonempty COMMA record_create_field .  (reduce by rule 43)



	.	reduce by rule 43


state 106:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	record_create_field : ID EQ exp .  (reduce by rule 44)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 44


state 107:

	array_create : ID LBRACK exp RBRACK OF . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 121
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 108:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	explist_nonempty : explist COMMA exp .  (reduce by rule 53)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 53


state 109:

	tydec : TYPE ID EQ ty .  (reduce by rule 26)



	.	reduce by rule 26


state 110:

	ty : ARRAY . OF ID 

	OF	shift 122


	.	error


state 111:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 118

	tyfields	goto 123
	tyfields_nonempty	goto 116
	tyfield	goto 115

	.	reduce by rule 31


state 112:

	ty : ID .  (reduce by rule 27)



	.	reduce by rule 27


state 113:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 35)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 35


state 114:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 124


	.	error


state 115:

	tyfields_nonempty : tyfield .  (reduce by rule 33)



	.	reduce by rule 33


state 116:

	tyfields : tyfields_nonempty .  (reduce by rule 32)



	.	reduce by rule 32


state 117:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 
	tyfields_nonempty : tyfields . COMMA tyfield 

	COMMA	shift 126
	RPAREN	shift 125


	.	error


state 118:

	tyfield : ID . COLON ID 

	COLON	shift 127


	.	error


state 119:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 128


	.	error

error:  state 120: shift/reduce conflict (shift OR, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift AND, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift GE, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift GT, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift LE, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift LT, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift NEQ, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift EQ, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift DIVIDE, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift TIMES, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift MINUS, reduce by rule 14)
error:  state 120: shift/reduce conflict (shift PLUS, reduce by rule 14)

state 120:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 14)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 14

error:  state 121: shift/reduce conflict (shift OR, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 45)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 45)

state 121:

	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 
	array_create : ID LBRACK exp RBRACK OF exp .  (reduce by rule 45)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 45


state 122:

	ty : ARRAY OF . ID 

	ID	shift 129


	.	error


state 123:

	ty : LBRACE tyfields . RBRACE 
	tyfields_nonempty : tyfields . COMMA tyfield 

	COMMA	shift 126
	RBRACE	shift 130


	.	error


state 124:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 131
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 133
	EQ	shift 132


	.	error


state 126:

	tyfields_nonempty : tyfields COMMA . tyfield 

	ID	shift 118

	tyfield	goto 134

	.	error


state 127:

	tyfield : ID COLON . ID 

	ID	shift 135


	.	error


state 128:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 136
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 129:

	ty : ARRAY OF ID .  (reduce by rule 29)



	.	reduce by rule 29


state 130:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 28)



	.	reduce by rule 28


state 131:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 36)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 36


state 132:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 137
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 138


	.	error


state 134:

	tyfields_nonempty : tyfields COMMA tyfield .  (reduce by rule 34)



	.	reduce by rule 34


state 135:

	tyfield : ID COLON ID .  (reduce by rule 30)



	.	reduce by rule 30

error:  state 136: shift/reduce conflict (shift OR, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift AND, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift GE, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift GT, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift LE, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift LT, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift NEQ, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift EQ, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift DIVIDE, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift TIMES, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift MINUS, reduce by rule 17)
error:  state 136: shift/reduce conflict (shift PLUS, reduce by rule 17)

state 136:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 17)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 17


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 37)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 37


state 138:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 139


	.	error


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 140
	lvalue	goto 8
	unit_exp	goto 7
	arith_exp	goto 6
	funcall	goto 5
	comp_exp	goto 4
	bool_exp	goto 3
	record_create	goto 2
	array_create	goto 1

	.	error


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 38)
	arith_exp : exp . PLUS exp 
	arith_exp : exp . MINUS exp 
	arith_exp : exp . TIMES exp 
	arith_exp : exp . DIVIDE exp 
	comp_exp : exp . EQ exp 
	comp_exp : exp . NEQ exp 
	comp_exp : exp . LT exp 
	comp_exp : exp . LE exp 
	comp_exp : exp . GT exp 
	comp_exp : exp . GE exp 
	bool_exp : exp . AND exp 
	bool_exp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 38


state 141:


	EOF	accept


	.	error

507 of 1013 action table entries left after compaction
346 goto table entries
